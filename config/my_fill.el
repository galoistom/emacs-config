(setq input-config-alist
      '(("j" . ((lambda ()
		  (insert "$$")
		  (backward-char 1))))
	("beg" . ((lambda ()
		      (insert "\\begin{}\\end{}")
		      (backward-char 7))))
	("k" . ((lambda ()
		  (insert "^{}")
		  (backward-char 1))))
	("a" . ((lambda ()
		  (insert "\\alpha")
		  (backward-char 1))))
	("bar" . ((lambda ()
		    (insert "\\overline{}")
		    (backward-char 1))))
	("J" . ((lambda ()
		  (insert "$$\n\n$$")
		  (backward-char 3))))
	("tikz" . ((lambda ()
		     (insert "#+header: :header \'(\"\\usepackage{tikz-cd}\") \n#+begin_latex\n\n#+end_latex")
		     (backward-char 12))))
	("f" . ((lambda ()
		   (insert "\\frac{}{}")
		   (backward-char 3))))
	("par" . ((lambda ()
		     (insert "\\partial"))))
	("\(\)" . ((lambda ()
		   (insert "\\left(\\right)")
		   (backward-char 7))))
	))

(defun my-tex-input (name)
  (interactive "sinput command:")
  (let ((result (cdr (assoc name input-config-alist))))
    (forward-char 1)
    (dolist (command result)
      (funcall command)
      ))
  )

(evil-leader/set-key "j" 'my-tex-input)
